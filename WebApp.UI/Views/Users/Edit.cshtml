@model WebApp.UI.ViewModels.UserEditViewModel

@{
    ViewData["Title"] = "Edit User";
}

<h1 class="my-4">Edit User</h1>

<form asp-action="Edit" method="post" class="card p-3" style="max-width: 800px;">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="UserId" />

    <div class="mb-3">
        <label asp-for="Name" class="form-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Email" class="form-label"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label class="form-label">Role:</label>
        <select asp-for="SelectedRoleId" class="form-select">
            <option value="">-- Select a Role --</option>
            @foreach (var role in Model.Roles)
            {
                <option value="@role.Id" selected="@(Model.SelectedRoleId == role.Id ? "selected" : null)">@role.Name</option>
            }
        </select>
        <span asp-validation-for="SelectedRoleId" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label class="form-label">Tasks:</label><br />
        <div class="d-flex flex-wrap" style="gap:10px;">
            @foreach (var task in Model.AllTasks)
            {
                bool isSelected = Model.SelectedTasks.Contains(task.Id);
                <span class="task-icon" data-id="@task.Id" style="cursor:pointer;">
                    <i class="fas fa-tag @(isSelected ? "icon-selected" : "icon-unselected")"></i> @task.Name
                </span>
                @if (isSelected)
                {
                    <input type="hidden" name="SelectedTasks" value="@task.Id" />
                }
            }
        </div>
    </div>

    <div class="d-flex gap-2">
        <button type="submit" class="btn btn-success btn-sm">Save</button>
        <a href="@Url.Action("Index")" class="btn btn-secondary btn-sm">Cancel</a>
    </div>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial");
    <script>
        document.querySelectorAll('.task-icon').forEach(icon => {
            icon.addEventListener('click', () => {
                const taskId = icon.getAttribute('data-id');
                const hiddenInputs = document.querySelectorAll(`input[name="SelectedTasks"][value="${taskId}"]`);
                const iElement = icon.querySelector('i');

                if (hiddenInputs.length > 0) {
                    hiddenInputs.forEach(i => i.remove());
                    iElement.classList.remove('icon-selected');
                    iElement.classList.add('icon-unselected');
                } else {
                    const hidden = document.createElement('input');
                    hidden.type = 'hidden';
                    hidden.name = 'SelectedTasks';
                    hidden.value = taskId;
                    icon.appendChild(hidden);
                    iElement.classList.remove('icon-unselected');
                    iElement.classList.add('icon-selected');
                }
            });
        });
    </script>
}
